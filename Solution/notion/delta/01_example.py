# arr의 중앙값 5의 위치 (1, 1)에서 상하좌우 값을 출력해 봅시다.
arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

# 기준점
r = 1
c = 1

# 행, 열 값
N = len(arr)
M = len(arr[0])

# 상, 하, 좌, 우 순서로 방향 벡터(델타) 정의
# r(행)의 변화량
dr = [-1, 1, 0, 0]
# c(열)의 변화량
dc = [0, 0, -1, 1]

# 4방향 확인 -> 총 반복도 4번
for i in range(4):
    # 새로운 위치 이동
    nr = r + dr[i]
    nc = c + dc[i]
    
    # 이동하고나서 확인해야 할 것이 있음
    # 경계(벽)을 체크 -> 체크를 안해도 파이썬은 음수 인덱스를 지원하기 때문에 오류가 나지는 않는다. 때문에 반드시 체크 필요
    # 이동 후 위치가 배열의 범위를 벗어나지 않는지를 확인
    if 0 <= nr < N and 0 <= nc < M:
        # 이동한 위치의 값을 출력
        print(arr[nr][nc])